// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.Competition2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassisSpeedController1;
    public static SpeedController chassisSpeedController2;
    public static SpeedControllerGroup chassisSpeedControllerGroup1;
    public static RobotDrive chassisRobotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public static void init()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisSpeedController1 = new Spark(0);
        LiveWindow.addActuator("Chassis", "Speed Controller 1", (Spark) chassisSpeedController1);
        chassisSpeedController1.setInverted(false);
        chassisSpeedController2 = new Spark(1);
        LiveWindow.addActuator("Chassis", "Speed Controller 2", (Spark) chassisSpeedController2);
        chassisSpeedController2.setInverted(false);
        chassisSpeedControllerGroup1 = new SpeedControllerGroup(chassisSpeedController2, chassisSpeedController1  );
        LiveWindow.addActuator("Chassis", "Speed Controller Group 1", chassisSpeedControllerGroup1);
        
        chassisRobotDrive21 = new RobotDrive(chassisSpeedController1, chassisSpeedController2);
        
        chassisRobotDrive21.setSafetyEnabled(true);
        chassisRobotDrive21.setExpiration(0.1);
        chassisRobotDrive21.setSensitivity(0.5);
        chassisRobotDrive21.setMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}
}
